model Class {
  id          String  @id
  name        String
  description String
  bannerKey   String? @map("banner_key")
  videoKey    String? @map("video_key")
  courseId    String  @unique @map("course_id")

  course   Course         @relation(fields: [courseId], references: [id], onDelete: Cascade)
  students ClassStudent[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt() @map("updated_at")

  @@map("classes")
}

enum ClassStudentStatus {
  ACCOMPLISHED
  AVAILABLE
  UNAVAILABLE

  @@map("class_student_status")
}

model ClassStudent {
  classId   String @map("class_id")
  studentId String @map("student_id")

  class   Class   @relation(fields: [classId], references: [id], onDelete: Cascade)
  student Account @relation(fields: [studentId], references: [id], onDelete: Cascade)

  status ClassStudentStatus

  startedAt   DateTime @default(now()) @map("started_at")
  completedAt DateTime @default(now()) @map("completed_at")

  @@id([classId, studentId])
  @@map("classes_students")
}
